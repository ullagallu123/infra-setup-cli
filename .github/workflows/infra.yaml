name: Terraform Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action: apply or destroy'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
    
env:
  AWS_REGION : us-east-1 

permissions:
      id-token: write   
      contents: read
 
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
  terraform:
    name: 'Terraform Workflow'
    runs-on: ubuntu-latest
    
    env:
      TF_VERSION: '1.8.5' # Change this to your required Terraform version
      TF_WORKING_DIR: '01.vpc'

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION}}

    
    - name: 'Terraform version'
      run: terraform -version

    - name: 'Current Working dir'
      run: pwd
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 'Listing the content'
      run: ls -l
      working-directory: ${{ env.TF_WORKING_DIR }}

    # - name: Checkout Repository
    #   uses: actions/checkout@v2

    # - name: Initializing
    #   run: terraform init -upgrade

    # - name: Format Check
    #   run: terraform fmt -check

    # - name: Validate Configuration
    #   run: terraform validate

    # - name: Plan Changes
    #   run: terraform plan

    # - name: Apply or Destroy Changes
    #   run: terraform ${{ github.event.inputs.action }} -auto-approve


    

