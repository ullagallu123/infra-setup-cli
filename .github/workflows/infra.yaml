name: Terraform Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action: apply or destroy'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
    
env:
  AWS_REGION: us-east-1

permissions:
  id-token: write   
  contents: read

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    env:
      TF_VERSION: '1.8.5'
      TF_WORKING_DIR: '01.vpc'

    steps:
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Caller Identity
        run: aws sts get-caller-identity

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Version
        run: terraform -version

      - name: Current Working Directory
        run: pwd
        working-directory: ${{ env.TF_WORKING_DIR }}
      
      - name: Listing the Content
        run: ls -l
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Initializing
        run: terraform init -upgrade
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Format Check
        run: terraform fmt -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Validate Configuration
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Plan Changes
        run: terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Apply Changes
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Destroy Changes
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}
